package com.hackamaroo.hw2;

public class Vector {

	private double x; 
	private double y; 
	private Point start; 
	private Point end; 
	

	public Vector (Point a, Point b){
		x = b.getX() - a.getX();
		y = b.getY() - a.getY();
		start = a; 
		end = b; 
	}
	
	public Vector normalize(){
		Point tempA = new Point(start.getX()/magnitude(), 
				start.getY()/magnitude());
		Point tempB = new Point(end.getX()/magnitude(), 
				end.getY()/magnitude());
		return new Vector(tempA, tempB); 
	}
	
	public double magnitude(){
		return Math.sqrt(x*x + y*y);
	}
	
	public double length(){
		return ( Math.sqrt((start.getX()-end.getX())*(start.getX()-end.getX())
				+ (start.getY() - end.getY())*(start.getY()-end.getY())));
	}
	
	public double dot(Vector a){
		return a.x*x + a.y*y; 
	}
	
	public Vector times(double m){
		Point tempA = new Point(start.getX()*m, start.getY()*m);
		Point tempB = new Point(end.getX()*m, end.getY()*m);
		return new Vector(tempA, tempB);
	}
	
	public Point add(Point a){
		return new Point(x+a.getX(), y+a.getY());
	}
}

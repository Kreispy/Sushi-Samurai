/* COPYRIGHT (C) 2013 Angela M Yu, Ana Mei, Kevin Zhao, and Chris Chow. All Rights Reserved. */
package com.project.sushi;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

public class CollisionTest2 {

	private Collision c;
	private Point p1;
	private Point p2;
	private List<Point> pdrawn; 
	
	@Before
	public void setUp() {
		// line from (0,0) to (12,6)
		// circle centered at (8,0) with radius 5
		// Should intersect, min distance should be 4 ish
		c = new Collision();
		p1 = new Point(0, 0, 1, 1, false);
		p2 = new Point(12, 6, 1, 1, true);
		pdrawn = new ArrayList<Point>(); 
		pdrawn.add(p1);
		pdrawn.add(p1);
		pdrawn.add(p2);
	}
	
	@Test
	public void test() {
		boolean result = c.checkCollisionsVectors(p1, p2, 8, 0, 8);
		assertTrue(result);
		assertTrue(c.getCloseness() == Math.sqrt(12.8));
		assertTrue(c.getScore() == 996);
	}
	
	@Test
	public void testFalse() {
		boolean result = c.checkCollisionsVectors(p1, p2, 8, 0, 2);
		assertTrue(c.getCloseness() == Math.sqrt(12.8));
		//assertTrue(c.getScore() == 996);
		assertFalse(result);
		
	}
	
	@Test
	public void testList() {
		boolean result = c.checkCollisionsVectors(pdrawn.get(pdrawn.size()-2), 
				pdrawn.get(pdrawn.size()-1), 8, 0, 8);
		assertTrue(c.getCloseness() == Math.sqrt(12.8));
		assertTrue(c.getScore() == 996);
		assertTrue(result);
		
	}
	
	@Test
	public void testTooFar() {
		boolean result = c.checkCollisionsVectors(p1, p2, 80, 0, 8);
		assertTrue(c.getCloseness() == 68.26419266350405);
		assertFalse(result);
		//assertTrue(c.getScore() == 931);
	}
	
	@Test
	public void testOnLine() {
		boolean result = c.checkCollisionsVectors(p1, p2, 2, 1, 1);
		assertTrue(c.getCloseness() == 0);
		assertTrue(result);
		assertTrue(c.getScore() == 1000);
	}
	
	@Test
	public void testOnExactlyPointA() {
		boolean result = c.checkCollisionsVectors(p1, p2, 0, 0, 1);
		assertTrue(result);
		assertTrue(c.getCloseness() == 0);
		assertTrue(c.getScore() == 1000);
	}
	
	@Test
	public void testOnExactlyPointB() {
		boolean result = c.checkCollisionsVectors(p1, p2, 12, 6, 1);
		assertTrue(result);
		assertTrue(c.getCloseness() == 0);
		assertTrue(c.getScore() == 1000);
	}
	
	@Test
	public void testNullPoints() {
		boolean result = c.checkCollisionsVectors(null, null, 12, 6, 1);
		assertFalse(result);
	}

}

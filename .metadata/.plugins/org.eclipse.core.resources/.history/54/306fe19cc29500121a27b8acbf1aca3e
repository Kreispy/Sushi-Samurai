package com.hackamaroo.hw2;

public class Vector {

	public double x; 
	public double y; 
	private Point start; 
	private Point end; 
	public double x_unit; 
	public double y_unit; 
	

	public Vector (Point a, Point b){
		x = b.getX() - a.getX();
		y = b.getY() - a.getY();
		start = a; 
		end = b; 
		x_unit = b.getX() - a.getX();
		y_unit = b.getY() - a.getY();
	}
	
	
	public void makeUnit(){
		x_unit = x/magnitude(); 
		y_unit = y/magnitude(); 
	}
	
	public double magnitude(){
		return Math.sqrt(x*x + y*y);
	}
	
	public double length(){
		return ( Math.sqrt((start.getX()-end.getX())*(start.getX()-end.getX())
				+ (start.getY() - end.getY())*(start.getY()-end.getY())));
	}
	
	public double dot(Vector a){
		/*if(x != x_unit || y != y_unit){
			if(a.x != a.x_unit || a.y != a.y_unit){
				return a.x_unit*x_unit + a.y_unit*y_unit; 
			}
			return a.x*x_unit + a.y*y_unit; 
		}*/
		return a.x_unit*x_unit + a.y_unit*y_unit; 
	}
	
	public Vector times(double m){
		Point tempA = new Point(start.getX()*m, start.getY()*m);
		Point tempB = new Point(end.getX()*m, end.getY()*m);
		return new Vector(tempA, tempB);
	}
	
	public Point timesAdd(double m, Point a ){
		double x_temp = x_unit*m +a.getX(); 
		double y_temp = y_unit*m + a.getY(); 
		
		return new Point(x_temp, y_temp);
	}
	
	public Point add(Point a){
		//return new Point(x+a.getX(), y+a.getY());
		return new Point(x_unit+a.getX(), y_unit+a.getY());
	}
}
